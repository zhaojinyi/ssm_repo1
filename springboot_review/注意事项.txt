springboot_springMVC_MyBatis   整合时需要注意在配置文件  application.properties  使用  Mybatis的注解   扫描  mapper.xml


springboot_validate  数据校验常用注解
/**
     * @NotBlank   判断字符串是否为null或者是空串
     * @NotEmpty   判断字符串是否null或者是空串
     * @Length     判断字符串的长度（最大或最小）
     * @Min        判断数值最小值
     * @Max        判断数值最大值
     * @Email      判断邮箱是否合法
     */

    /**java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'users' available as request attribute
     *
     * 解决异常的方式:
     *  可以再页面跳转的方法中注入一个users对象，
     *  注意：  由于springMVC会将该对象放入到MOdel 中传递，key的名称回事呀该对象的驼峰式的命名规则来作为key
     *  参数的变量名需要与对象的名称相同，，将首字母小写
     * @return
     */


springboot处理异常的方式：
    1.1  自定义错误页面
    1.2 @ExceptionHandler(value={java.lang.ArithmeticException.class})
    1.3 @ControllerAdvice+@ExceptionHandler
	需要创建一个能够处理异常的全局异常类，在该类上添加@ControllerAdvice
    1.4 SimpleMappingExceptionResolver
	在全局异常类中添加一个方法完成异常的统一处理
    1.5 自定义HandlerExceptionResolver  
	需要在全局异常处理类中实现HandlerExceptionResolver

springboot的test测试类
    需要加载Junit包版本不低于4.12


springboot的热部署  devtools
    加载的包不要太高
	需要加上scope
	<dependency>
            	     <groupId>org.springframework.boot</groupId>
            	     <artifactId>spring-boot-devtools</artifactId>
                     <version>1.5.7.RELEASE</version>
            	     <optional>true</optional>
                     <scope>runtime</scope>
        	</dependency>
<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
spring的devtools工具根据springboot的版本不同需要修改其版本，个人建议： 永不使用这傻逼玩意


springboot的缓存Ehcache
   注意启动类上要开启@EnableCaching
     	@CacheEvict(value = "users", allEntries = true)   清除缓存中以users缓存策略缓存的对象
		Key 属性：给存储的值起个名称。在查询时如果有名称相同的，那么则知己从缓存中将 数据返回
	@Cacheable(value="users",key="#pageable.pageSize")
	@Cacheable(value = "users")   对当前方法做缓存处理













